name: Build-Docker-Image
on:
 workflow_dispatch:
 push:
    branches:
    - main
 pull_request:
    branches:
    - main

jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Run ESLint
      run: npm run lint

  build-backend:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: backend-gruppe-d-ss24
      REGISTERY: docker.io
  
    steps:
    - name: Checkout Application Code
      uses: actions/checkout@v4

    - name: Run static code analysis of App
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        security-checks: 'vuln,secret,config'
        ignore-unfixed: true
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL'

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
          node-version: 20
    
    - name: Install App
      run: npm install
    
    - name: Run Unit Tests
      run: npx mocha test/index.test.js 
    
    -  name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3
    
    - name: Install cosign
      uses: sigstore/cosign-installer@v3.5.0
      with:
        cosign-release: 'v2.2.4'
      
    -  name: Login to Docker Hub
       uses: docker/login-action@v3
       with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        context: .
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
  
    - name: Write key to disk
      run: 'echo "$KEY" > cosign.key'
      shell: bash
      env:
        KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

    - name: Write pub key to disk
      run: 'echo "$KEY" > cosign.pub'
      shell: bash
      env:
        KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}

    - name: Sign the published Docker image
      env:
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      run:  cosign sign --y --key cosign.key ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} 

    - name: Verify image
      env:
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      run:  cosign verify --key cosign.pub ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
    
    #- name: Upload Test Results
    #  uses: actions/upload-artifact@v4
    #  with:
    #      name: Unit-Test-Results
    #      path: test-report.json